using ITech.Cqrs.Cqrs.Commands;
{{using_namespaces}}

namespace {{business_logic_namespace}};

public partial class {{handler_name}} : ICommandHandler<{{command_name}}>
{
    private readonly {{db_context_name}} _db;

    public {{handler_name}}({{db_context_name}} db) {
        _db = db;
    }

    public async Task HandleAsync({{command_name}} command, CancellationToken cancellation) {
        var entity = await _db.FindAsync<{{entity_name}}>([{{find_parameters}}], cancellation);
        if (entity == null) return;
        
        _db.Remove(entity);
        await _db.SaveChangesAsync(cancellation);
    }
}