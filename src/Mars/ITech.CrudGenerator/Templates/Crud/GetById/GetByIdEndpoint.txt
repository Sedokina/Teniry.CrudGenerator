using Microsoft.AspNetCore.Mvc;
using ITech.Cqrs.Cqrs.Queries;
using ITech.Cqrs.Endpoints;
using {{business_logic_namespace}};

namespace {{endpoint_namespace}};

public static partial class {{endpoint_class_name}}
{
    /// <summary>
    ///     Get {{entity_title}} by id
    /// </summary>
    /// <response code="200">Returns full {{entity_title}} data</response>
    /// <response code="404">{{entity_title}} not found</response>
    [ProducesResponseType(typeof({{dto_name}}), 200)]
    [ProducesResponseType(typeof(ApiResponse), 404)]
    public static async Task<IResult> {{function_name}}(
        {{route_params}},
        IQueryDispatcher queryDispatcher,
        CancellationToken cancellation)
    {
        var query = new {{query_name}}({{query_constructor_parameters}});
        var result = await queryDispatcher.DispatchAsync<{{query_name}}, {{dto_name}}>(query, cancellation);
        
        return TypedResults.Ok(result);
    }
}