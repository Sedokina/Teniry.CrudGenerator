using ITech.Cqrs.Cqrs.Commands;
using {{namespace}};

namespace {{preferred_namespace}}.Controllers;

public partial class Create{{class_name}}Handler : ICommandHandler<{{command_name}}>
{
    private readonly MarsDb _db;

    public Create{{class_name}}Handler(MarsDb db) {
        _db = db;
    }

    public async Task HandleAsync({{command_name}} command, CancellationToken cancellation) {
        var mapper = new {{command_name}}Mapper();
        var entity = mapper.{{command_name}}To{{entity_name}}(command);
        await _db.AddAsync(entity, cancellation);
        await _db.SaveChangesAsync(cancellation);
    }
}

// TODO: implement mapping
public partial class {{command_name}}Mapper
{
    public {{entity_name}} {{command_name}}To{{entity_name}}({{command_name}} source) { return null!; }
}