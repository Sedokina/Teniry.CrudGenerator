using ITech.Cqrs.Cqrs.Commands;
using {{entity_namespace}};

namespace {{put_into_namespace}};

public partial class {{handler_name}} : ICommandHandler<{{command_name}}>
{
    private readonly MarsDb _db;

    public {{handler_name}}(MarsDb db) {
        _db = db;
    }

    public async Task HandleAsync({{command_name}} command, CancellationToken cancellation) {
        var entity = await _db.Set<{{entity_name}}>().FindAsync([{{find_properties}}], cancellation);
        if (entity == null) return;
        
        _db.Remove(entity);
        await _db.SaveChangesAsync(cancellation);
    }
}