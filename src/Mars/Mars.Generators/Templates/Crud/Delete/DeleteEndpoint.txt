using ITech.Cqrs.Cqrs.Commands;
using {{business_logic_namespace}};

namespace {{endpoint_namespace}};

public static partial class {{endpoint_class_name}}
{
    /// <summary>
    ///     Delete {{entity_name}}
    /// </summary>
    /// <response code="204">{{entity_name}} deleted</response>
    /// <response code="404">{{entity_name}} not found</response>
    [ProducesResponseType(204)]
    [ProducesResponseType(typeof(ApiResponse), 404)]
    public static async Task<IResult> DeleteAsync(
        {{route_params}},
        ICommandDispatcher commandDispatcher,
        CancellationToken cancellation)
    {
        var command = new {{command_name}}({{command_constructor_parameters}});
        await commandDispatcher.DispatchAsync(command, cancellation);
        
        return TypedResults.NoContent();
    }
}