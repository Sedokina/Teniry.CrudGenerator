using ITech.Cqrs.Cqrs.Queries;
using ITech.Cqrs.Domain.Exceptions;
using ITech.Cqrs.Queryables.Page;
using Mapster;
using Microsoft.EntityFrameworkCore;
using {{entity_namespace}};

namespace {{put_into_namespace}}.Controllers;

public partial class {{handler_name}} : IQueryHandler<{{query_name}}, {{dto_name}}>
{
    private readonly MarsDb _db;

    public {{handler_name}}(MarsDb db) {
        _db = db;
    }

    public async Task<{{dto_name}}> HandleAsync({{query_name}} query, CancellationToken cancellation) {
        var result = await _db.Set<{{entity_name}}>()
            .ProjectToType<{{dto_list_item_name}}>()
            .ToPagedListAsync(query, cancellation);
            
        return new {{dto_name}}(result.ToList(), result.GetPage());
    }
}