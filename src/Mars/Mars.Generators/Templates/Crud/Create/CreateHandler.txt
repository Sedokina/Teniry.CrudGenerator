using ITech.Cqrs.Cqrs.Commands;
using Mapster;
using {{entity_namespace}};
using {{db_context_namespace}};

namespace {{business_logic_namespace}};

public partial class {{handler_name}} : ICommandHandler<{{command_name}}, {{dto_name}}>
{
    private readonly {{db_context_name}} _db;

    public {{handler_name}}({{db_context_name}} db) {
        _db = db;
    }

    public async Task<{{dto_name}}> HandleAsync({{command_name}} command, CancellationToken cancellation) {
        var entity = command.Adapt<{{entity_name}}>();
        await _db.AddAsync(entity, cancellation);
        await _db.SaveChangesAsync(cancellation);
        return new({{created_dto_constructor_params}});
    }
}