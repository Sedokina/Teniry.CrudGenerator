using ITech.Cqrs.Cqrs.Commands;
using ITech.Cqrs.Domain.Exceptions;
using Mapster;
using {{namespace}};

namespace {{preferred_namespace}}.Controllers;

public partial class Update{{entity_name}}Handler : ICommandHandler<{{command_name}}>
{
    private readonly MarsDb _db;

    public Update{{entity_name}}Handler(MarsDb db) {
        _db = db;
    }

    public async Task HandleAsync({{command_name}} command, CancellationToken cancellation) {
        var entity = await _db.Set<{{entity_name}}>().FindAsync([{{find_properties}}], cancellation);
        if (entity == null) {
            throw new EfEntityNotFoundException(typeof({{entity_name}}));
        }
    
        command.Adapt(entity);
        await _db.SaveChangesAsync(cancellation);
    }
}