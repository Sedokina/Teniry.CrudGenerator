//HintName: FetchTestEntitiesHandler.g.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a crud generator tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using Microsoft.EntityFrameworkCore;
using Teniry.Cqrs.Queries;
using Teniry.Cqrs.Extended.Exceptions;
using Teniry.Cqrs.Extended.Queryables.Page;
using Teniry.Cqrs.Extended.Queryables.Filter;
using Teniry.CrudGenerator.Tests;
using Teniry.CrudGenerator.Tests;
using Mapster;

namespace Teniry.CrudGenerator.Tests.Application.TestEntityFeature.FetchTestEntities;
public partial class FetchTestEntitiesHandler : IQueryHandler<FetchTestEntitiesQuery, TestEntitiesDto>
{
    private readonly TestDb _db;
    public FetchTestEntitiesHandler(TestDb db)
    {
        _db = db;
    }

    /// <inheritdoc/>
    public async Task<TestEntitiesDto> HandleAsync(FetchTestEntitiesQuery query, CancellationToken cancellation)
    {
        var filter = query.Adapt<FetchTestEntitiesFilter>();
        var items = await _db.Set<TestEntity>().Filter(filter).ProjectToType<TestEntitiesListItemDto>().ToPagedListAsync(query, cancellation);
        return new TestEntitiesDto(items.ToList(), items.GetPage());
    }
}