//HintName: FetchEntityCustomHandler.g.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a crud generator tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using Microsoft.EntityFrameworkCore;
using Teniry.Cqrs.Queries;
using Teniry.Cqrs.Extended.Exceptions;
using Teniry.Cqrs.Extended.Queryables.Page;
using Teniry.Cqrs.Extended.Queryables.Filter;
using Teniry.CrudGenerator.Tests;
using Teniry.CrudGenerator.Tests;
using Mapster;

namespace Teniry.CrudGenerator.Tests.Application.TestEntityFeature.FetchCustomNs;
public partial class FetchEntityCustomHandler : IQueryHandler<FetchEntityCustomCommand, FetchCustomDto>
{
    private readonly TestDb _db;
    public FetchEntityCustomHandler(TestDb db)
    {
        _db = db;
    }

    /// <inheritdoc/>
    public async Task<FetchCustomDto> HandleAsync(FetchEntityCustomCommand query, CancellationToken cancellation)
    {
        var filter = query.Adapt<GetTestEntitiesFilter>();
        var items = await _db.Set<TestEntity>().Filter(filter).ProjectToType<CustomFetchListItemDto>().ToPagedListAsync(query, cancellation);
        return new FetchCustomDto(items.ToList(), items.GetPage());
    }
}